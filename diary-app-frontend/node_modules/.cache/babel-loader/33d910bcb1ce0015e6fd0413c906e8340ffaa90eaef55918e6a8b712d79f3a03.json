{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nexport default {\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [] // Ïó¨Í∏∞ eventsÎ•º APIÏóêÏÑú Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î°ú ÏóÖÎç∞Ïù¥Ìä∏Ìï¥Ïïº Ìï®!\n      }\n    };\n  },\n  created() {\n    this.fetchDiaries(); // Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ Î°úÎìú\n  },\n  methods: {\n    formatDate(created_at) {\n      if (!created_at) {\n        console.error(\"Invalid timestamp:\", created_at);\n        return null;\n      }\n      const date = new Date(Number(created_at) * 1000); // Ïà´ÏûêÎ°ú Î≥ÄÌôò ÌõÑ Î∞ÄÎ¶¨Ï¥àÎ°ú Î≥ÄÌôò\n      return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD ÌòïÏãù Î∞òÌôò\n    },\n    // Îã§Ïù¥Ïñ¥Î¶¨ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\n    fetchDiaries() {\n      apiClient.get(\"/diary\").then(response => {\n        console.log(\"üìå Raw API Response:\", response.data); // ÏùëÎãµ Ï†ÑÏ≤¥ ÌôïÏù∏\n\n        if (!response.data || !response.data.data) {\n          console.error(\"‚ùå API ÏùëÎãµ Íµ¨Ï°∞Í∞Ä ÏòàÏÉÅÍ≥º Îã§Î¶ÖÎãàÎã§!\", response.data);\n          return;\n        }\n        const events = response.data.data.map(entry => {\n          console.log(\"üîç Entry:\", entry); // Í∞Å Ìï≠Î™©Ïùò Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏\n          console.log(\"üìÜ Entry created_at:\", entry.created_at); // created_at Í∞í ÌôïÏù∏\n\n          if (!entry.created_at) {\n            console.error(\"‚ùå ÏûòÎ™ªÎêú created_at Í∞í:\", entry);\n            return null;\n          }\n          return {\n            title: entry.title,\n            start: this.formatDate(entry.created_at) // created_at ÏÇ¨Ïö©\n          };\n        }).filter(event => event !== null); // Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Ìï≠Î™© Ï†úÍ±∞\n\n        console.log(\"‚úÖ Events before update:\", events);\n        this.calendarOptions = Object.assign({}, this.calendarOptions, {\n          events: events\n        });\n        console.log(\"‚úÖ Updated calendarOptions:\", this.calendarOptions);\n      }).catch(error => {\n        console.error(\"‚ùå Error fetching diaries:\", error.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiClient","FullCalendar","dayGridPlugin","components","data","calendarOptions","plugins","initialView","events","created","fetchDiaries","methods","formatDate","created_at","console","error","date","Date","Number","toISOString","split","get","then","response","log","map","entry","title","start","filter","event","Object","assign","catch","message"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/CalendarList.vue"],"sourcesContent":["<template>\n  <div>\n    <FullCalendar ref=\"calendar\" :options=\"calendarOptions\" />\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nexport default {\n  components: {\n    FullCalendar,\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [], // Ïó¨Í∏∞ eventsÎ•º APIÏóêÏÑú Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞Î°ú ÏóÖÎç∞Ïù¥Ìä∏Ìï¥Ïïº Ìï®!\n      },\n    };\n  },\n  created() {\n    this.fetchDiaries(); // Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ Î°úÎìú\n  },\n  methods: {\n    formatDate(created_at) {\n      if (!created_at) {\n        console.error(\"Invalid timestamp:\", created_at);\n        return null;\n      }\n\n      const date = new Date(Number(created_at) * 1000); // Ïà´ÏûêÎ°ú Î≥ÄÌôò ÌõÑ Î∞ÄÎ¶¨Ï¥àÎ°ú Î≥ÄÌôò\n      return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD ÌòïÏãù Î∞òÌôò\n    },\n    // Îã§Ïù¥Ïñ¥Î¶¨ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞\n    fetchDiaries() {\n      apiClient\n        .get(\"/diary\")\n        .then((response) => {\n          console.log(\"üìå Raw API Response:\", response.data); // ÏùëÎãµ Ï†ÑÏ≤¥ ÌôïÏù∏\n\n          if (!response.data || !response.data.data) {\n            console.error(\"‚ùå API ÏùëÎãµ Íµ¨Ï°∞Í∞Ä ÏòàÏÉÅÍ≥º Îã§Î¶ÖÎãàÎã§!\", response.data);\n            return;\n          }\n\n          const events = response.data.data.map(entry => {\n            console.log(\"üîç Entry:\", entry); // Í∞Å Ìï≠Î™©Ïùò Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏\n            console.log(\"üìÜ Entry created_at:\", entry.created_at); // created_at Í∞í ÌôïÏù∏\n\n            if (!entry.created_at) {\n              console.error(\"‚ùå ÏûòÎ™ªÎêú created_at Í∞í:\", entry);\n              return null;\n            }\n\n            return {\n              title: entry.title,\n              start: this.formatDate(entry.created_at), // created_at ÏÇ¨Ïö©\n            };\n          }).filter(event => event !== null); // Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ Ìï≠Î™© Ï†úÍ±∞\n\n          console.log(\"‚úÖ Events before update:\", events);\n\n          this.calendarOptions = Object.assign({}, this.calendarOptions, {\n            events: events,\n          });\n\n          console.log(\"‚úÖ Updated calendarOptions:\", this.calendarOptions);\n        })\n        .catch((error) => {\n          console.error(\"‚ùå Error fetching diaries:\", error.message);\n        });\n    }\n  }\n};\n</script>"],"mappings":";;;AAOA,OAAOA,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,uBAAuB;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QACfC,OAAO,EAAE,CAACJ,aAAa,CAAC;QACxBK,WAAW,EAAE,cAAc;QAC3BC,MAAM,EAAE,EAAE,CAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE;QACfC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,UAAU,CAAC;QAC/C,OAAO,IAAI;MACb;MAEA,MAAMG,IAAG,GAAI,IAAIC,IAAI,CAACC,MAAM,CAACL,UAAU,IAAI,IAAI,CAAC,EAAE;MAClD,OAAOG,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3C,CAAC;IACD;IACAV,YAAYA,CAAA,EAAG;MACbV,SAAQ,CACLqB,GAAG,CAAC,QAAQ,EACZC,IAAI,CAAEC,QAAQ,IAAK;QAClBT,OAAO,CAACU,GAAG,CAAC,sBAAsB,EAAED,QAAQ,CAACnB,IAAI,CAAC,EAAE;;QAEpD,IAAI,CAACmB,QAAQ,CAACnB,IAAG,IAAK,CAACmB,QAAQ,CAACnB,IAAI,CAACA,IAAI,EAAE;UACzCU,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEQ,QAAQ,CAACnB,IAAI,CAAC;UACtD;QACF;QAEA,MAAMI,MAAK,GAAIe,QAAQ,CAACnB,IAAI,CAACA,IAAI,CAACqB,GAAG,CAACC,KAAI,IAAK;UAC7CZ,OAAO,CAACU,GAAG,CAAC,WAAW,EAAEE,KAAK,CAAC,EAAE;UACjCZ,OAAO,CAACU,GAAG,CAAC,sBAAsB,EAAEE,KAAK,CAACb,UAAU,CAAC,EAAE;;UAEvD,IAAI,CAACa,KAAK,CAACb,UAAU,EAAE;YACrBC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEW,KAAK,CAAC;YAC3C,OAAO,IAAI;UACb;UAEA,OAAO;YACLC,KAAK,EAAED,KAAK,CAACC,KAAK;YAClBC,KAAK,EAAE,IAAI,CAAChB,UAAU,CAACc,KAAK,CAACb,UAAU,CAAC,CAAE;UAC5C,CAAC;QACH,CAAC,CAAC,CAACgB,MAAM,CAACC,KAAI,IAAKA,KAAI,KAAM,IAAI,CAAC,EAAE;;QAEpChB,OAAO,CAACU,GAAG,CAAC,yBAAyB,EAAEhB,MAAM,CAAC;QAE9C,IAAI,CAACH,eAAc,GAAI0B,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC3B,eAAe,EAAE;UAC7DG,MAAM,EAAEA;QACV,CAAC,CAAC;QAEFM,OAAO,CAACU,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACnB,eAAe,CAAC;MACjE,CAAC,EACA4B,KAAK,CAAElB,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACmB,OAAO,CAAC;MAC3D,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}