{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      diary: {\n        title: '',\n        content: ''\n      }\n    };\n  },\n  async created() {\n    const diaryId = this.$route.params.id;\n    try {\n      const response = await fetch(`http://localhost:3000/api/diary/${diaryId}`);\n      this.diary = await response.json();\n    } catch (err) {\n      alert('Failed to load diary details');\n    }\n  },\n  methods: {\n    async updateDiary() {\n      const diaryId = this.$route.params.id;\n      try {\n        const response = await fetch(`http://localhost:3000/api/diary/${diaryId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.diary)\n        });\n        if (response.ok) {\n          alert('Diary updated successfully!');\n          this.$router.push('/'); // 목록 페이지로 이동\n        } else {\n          const error = await response.json();\n          alert(`Error: ${error.message}`);\n        }\n      } catch (err) {\n        alert(`Request failed: ${err.message}`);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","diary","title","content","created","diaryId","$route","params","id","response","fetch","json","err","alert","methods","updateDiary","method","headers","body","JSON","stringify","ok","$router","push","error","message"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/EditDiaryForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>다이어리 수정</h1>\n    <form @submit.prevent=\"updateDiary\">\n      <label>\n        Title:\n        <input type=\"text\" v-model=\"diary.title\" required />\n      </label>\n      <label>\n        Content:\n        <textarea v-model=\"diary.content\" required></textarea>\n      </label>\n      <button type=\"submit\">Update</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      diary: {\n        title: '',\n        content: '',\n      },\n    };\n  },\n  async created() {\n    const diaryId = this.$route.params.id;\n    try {\n      const response = await fetch(`http://localhost:3000/api/diary/${diaryId}`);\n      this.diary = await response.json();\n    } catch (err) {\n      alert('Failed to load diary details');\n    }\n  },\n  methods: {\n    async updateDiary() {\n      const diaryId = this.$route.params.id;\n      try {\n        const response = await fetch(`http://localhost:3000/api/diary/${diaryId}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(this.diary),\n        });\n\n        if (response.ok) {\n          alert('Diary updated successfully!');\n          this.$router.push('/'); // 목록 페이지로 이동\n        } else {\n          const error = await response.json();\n          alert(`Error: ${error.message}`);\n        }\n      } catch (err) {\n        alert(`Request failed: ${err.message}`);\n      }\n    },\n  },\n};\n</script>"],"mappings":";AAkBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IACrC,IAAI;MACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,mCAAmCL,OAAO,EAAE,CAAC;MAC1E,IAAI,CAACJ,KAAI,GAAI,MAAMQ,QAAQ,CAACE,IAAI,CAAC,CAAC;IACpC,EAAE,OAAOC,GAAG,EAAE;MACZC,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,MAAMV,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,mCAAmCL,OAAO,EAAE,EAAE;UACzEW,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnB,KAAK;QACjC,CAAC,CAAC;QAEF,IAAIQ,QAAQ,CAACY,EAAE,EAAE;UACfR,KAAK,CAAC,6BAA6B,CAAC;UACpC,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC1B,OAAO;UACL,MAAMC,KAAI,GAAI,MAAMf,QAAQ,CAACE,IAAI,CAAC,CAAC;UACnCE,KAAK,CAAC,UAAUW,KAAK,CAACC,OAAO,EAAE,CAAC;QAClC;MACF,EAAE,OAAOb,GAAG,EAAE;QACZC,KAAK,CAAC,mBAAmBD,GAAG,CAACa,OAAO,EAAE,CAAC;MACzC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}