{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-bar\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Diary List\", -1 /* HOISTED */)), _createCommentVNode(\" 검색 UI \"), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchQuery = $event),\n    placeholder: \"Search diaries by title or content\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.searchDiaries && _ctx.searchDiaries(...args))\n  }, \"Search\")]), _createCommentVNode(\" 다이어리 목록 \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.diaries, entry => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: entry.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(entry.title), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(entry.content), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"em\", null, _toDisplayString(new Date(entry.created_at).toLocaleString()), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","_hoisted_1","type","_cache","$event","_ctx","searchQuery","placeholder","onClick","args","searchDiaries","_Fragment","_renderList","diaries","entry","key","id","_toDisplayString","title","_createTextVNode","content","Date","created_at","toLocaleString"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/DiaryList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Diary List</h2>\n\n    <!-- 검색 UI -->\n    <div class=\"search-bar\">\n      <input\n        type=\"text\"\n        v-model=\"searchQuery\"\n        placeholder=\"Search diaries by title or content\"\n      />\n      <button @click=\"searchDiaries\">Search</button>\n    </div>\n\n    <!-- 다이어리 목록 -->\n    <ul>\n      <li v-for=\"entry in diaries\" :key=\"entry.id\">\n        <strong>{{ entry.title }}</strong><br />\n        {{ entry.content }}<br />\n        <em>{{ new Date(entry.created_at).toLocaleString() }}</em>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\n\nexport default {\n  name: \"DiaryList\",\n  data() {\n    return {\n      diaries: [], // 다이어리 데이터\n      searchQuery: \"\", // 검색어\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    // 다이어리 데이터 가져오기\n    fetchDiaries(search = \"\") {\n      console.log(\"Search Query Sent:\", search); // 검색어 확인\n\n      apiClient\n        .get(\"/diary\", { params: { search } });\n        .then((response) => {\n          console.log(\"Fetched diaries:\", response.data); // 응답 확인\n          this.diaries = response.data; // 데이터 업데이트\n        })\n        .catch((error) => {\n          console.error(\"Error fetching diaries:\", error.message);\n        });\n    },\n    // 검색 실행\n    searchDiaries() {\n      this.fetchDiaries(this.searchQuery); // 검색어를 전달하여 데이터 가져오기\n    },\n  },\n};\n</script>\n\n<style scoped>\n.search-bar {\n  margin-bottom: 20px;\n}\n.search-bar input {\n  padding: 8px;\n  width: 300px;\n  margin-right: 10px;\n}\n.search-bar button {\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.search-bar button:hover {\n  background-color: #0056b3;\n}\n</style>"],"mappings":";;EAKSA,KAAK,EAAC;AAAY;;uBAJzBC,mBAAA,CAqBM,c,0BApBJC,mBAAA,CAAmB,YAAf,YAAU,sBAEdC,mBAAA,WAAc,EACdD,mBAAA,CAOM,OAPNE,UAOM,G,gBANJF,mBAAA,CAIE;IAHAG,IAAI,EAAC,MAAM;IAPnB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQiBC,IAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBG,WAAW,EAAC;iDADHF,IAAA,CAAAC,WAAW,E,GAGtBP,mBAAA,CAA8C;IAArCS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEJ,IAAA,CAAAK,aAAA,IAAAL,IAAA,CAAAK,aAAA,IAAAD,IAAA,CAAa;KAAE,QAAM,E,GAGvCT,mBAAA,aAAgB,EAChBD,mBAAA,CAMK,c,kBALHD,mBAAA,CAIKa,SAAA,QApBXC,WAAA,CAgB0BP,IAAA,CAAAQ,OAAO,EAAhBC,KAAK;yBAAhBhB,mBAAA,CAIK;MAJyBiB,GAAG,EAAED,KAAK,CAACE;QACvCjB,mBAAA,CAAkC,gBAAAkB,gBAAA,CAAvBH,KAAK,CAACI,KAAK,kB,0BAAYnB,mBAAA,CAAM,sCAjBhDoB,gBAAA,CAiBgD,GACxC,GAAAF,gBAAA,CAAGH,KAAK,CAACM,OAAO,kB,0BAAGrB,mBAAA,CAAM,sCACzBA,mBAAA,CAA0D,YAAAkB,gBAAA,KAA/CI,IAAI,CAACP,KAAK,CAACQ,UAAU,EAAEC,cAAc,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}