{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      photo: null // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    async submitDiary() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.photo) {\n          formData.append('photo', this.photo);\n        }\n        const response = await axios.post('http://localhost:3000/diaries', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('다이어리가 성공적으로 작성되었습니다!');\n        this.$router.push('/'); // 목록 페이지로 이동\n      } catch (error) {\n        console.error('다이어리 작성 중 오류:', error.message);\n        alert('다이어리를 작성하는 데 문제가 발생했습니다.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","title","content","photo","methods","handleFileUpload","event","target","files","submitDiary","formData","FormData","append","response","post","headers","alert","$router","push","error","console","message"],"sources":["/Users/ojaehyeon/Desktop/diary-app-frontend/src/components/DiaryForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>다이어리 작성</h1>\n    <form @submit.prevent=\"submitDiary\">\n      <div>\n        <label for=\"title\">제목</label>\n        <input v-model=\"title\" type=\"text\" id=\"title\" required placeholder=\"제목을 입력하세요\" />\n      </div>\n      <div>\n        <label for=\"content\">내용</label>\n        <textarea v-model=\"content\" id=\"content\" required placeholder=\"내용을 입력하세요\"></textarea>\n      </div>\n      <div>\n        <label for=\"photo\">사진 업로드</label>\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" />\n      </div>\n      <button type=\"submit\">작성</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      photo: null, // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    async submitDiary() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.photo) {\n          formData.append('photo', this.photo);\n        }\n\n        const response = await axios.post('http://localhost:3000/diaries', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        alert('다이어리가 성공적으로 작성되었습니다!');\n        this.$router.push('/'); // 목록 페이지로 이동\n      } catch (error) {\n        console.error('다이어리 작성 중 오류:', error.message);\n        alert('다이어리를 작성하는 데 문제가 발생했습니다.');\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/* 간단한 스타일 추가 */\nform div {\n  margin-bottom: 1rem;\n}\n</style>"],"mappings":";AAsBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,IAAI,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACH,KAAI,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;IACtC,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACX,KAAK,CAAC;QACpCS,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACV,OAAO,CAAC;QACxC,IAAI,IAAI,CAACC,KAAK,EAAE;UACdO,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,KAAK,CAAC;QACtC;QAEA,MAAMU,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;UAC3EK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QAEFC,KAAK,CAAC,sBAAsB,CAAC;QAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;QAC7CL,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}