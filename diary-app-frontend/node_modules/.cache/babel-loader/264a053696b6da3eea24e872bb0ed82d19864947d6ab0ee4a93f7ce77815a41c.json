{"ast":null,"code":"import apiClient from \"../services/api.js\";\nimport CalendarList from \"./CalendarList.vue\";\nexport default {\n  name: \"DiaryList\",\n  components: {\n    CalendarList\n  },\n  data() {\n    return {\n      diaries: [],\n      // 다이어리 데이터\n      searchQuery: \"\",\n      // 검색어\n      searchFilter: \"title\",\n      // 기본 검색 필터\n      currentPage: 1,\n      // 현재 페이지\n      totalPages: 1,\n      // 총 페이지 수\n      limit: 15,\n      // 페이지당 항목 수\n      searchClicked: false,\n      // 검색 버튼을 눌렀는지 여부 체크\n      chkFiltter: false // 검색 버튼을 눌렀는지 여부 체크\n    };\n  },\n  methods: {\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      const params = {\n        search: this.searchQuery,\n        filter: this.searchFilter,\n        // 검색 필터 추가\n        page: this.currentPage,\n        limit: this.limit\n      };\n      apiClient.get(\"/diary\", {\n        params\n      }).then(response => {\n        console.log(\"Fetched diaries:\", response.data);\n        this.diaries = response.data.data; // 현재 페이지 데이터\n        this.totalPages = Math.ceil(response.data.total / this.limit); // 총 페이지 계산\n      }).catch(error => {\n        console.error(\"Error fetching diaries:\", error.message);\n      });\n    },\n    // 검색 실행\n    searchDiaries() {\n      this.searchClicked = true; // 검색 버튼을 눌렀음을 표시\n      this.currentPage = 1; // 검색 시 첫 페이지로 이동\n      this.fetchDiaries();\n    },\n    checkFiltter() {\n      this.chkFiltter = true; // 검색 버튼을 눌렀음을 표시\n    },\n    // 페이지 변경\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        this.fetchDiaries();\n      }\n    }\n  }\n};","map":{"version":3,"names":["apiClient","CalendarList","name","components","data","diaries","searchQuery","searchFilter","currentPage","totalPages","limit","searchClicked","chkFiltter","methods","fetchDiaries","params","search","filter","page","get","then","response","console","log","Math","ceil","total","catch","error","message","searchDiaries","checkFiltter","changePage"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/DiaryList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Diary List</h2>\n\n    <!-- 검색 UI -->\n    <button @click=\"checkFiltter\">\n      <div class=\"search-bar\">\n        <!-- 검색 필터 -->\n        <select v-model=\"searchFilter\">\n          <option value=\"title\">Title</option>\n          <option value=\"content\">Content</option>\n        </select>\n\n        <!-- 검색어 입력 -->\n        <input\n          type=\"text\"\n          v-model=\"searchQuery\"\n          placeholder=\"Search diaries\"\n        />\n        <button @click=\"searchDiaries\">Search</button>\n      </div>\n    </button>\n   \n\n    <!-- 검색이 실행되었고, 결과가 있는 경우에만 리스트 표시 -->\n    <ul v-if=\"searchClicked && diaries.length > 0\">\n      <li v-for=\"entry in diaries\" :key=\"entry.id\">\n        <strong>\n          <router-link :to=\"`/edit/${entry.id}`\">{{ entry.title }}</router-link>\n        </strong>\n        <br />\n        {{ entry.content }}<br />\n        <em>{{ new Date(entry.created_at).toLocaleString() }}</em>\n      </li>\n    </ul>\n\n    <!-- 검색 결과가 없거나 검색을 실행하지 않은 경우 캘린더 표시 -->\n    <CalendarList v-else />\n\n    <!-- 페이지네이션 (검색이 실행되었고, 결과가 있는 경우에만 표시) -->\n    <div class=\"pagination\" v-if=\"searchClicked && diaries.length > 0\">\n      <button\n        v-for=\"page in totalPages\"\n        :key=\"page\"\n        @click=\"changePage(page)\"\n        :class=\"{ active: page === currentPage }\"\n      >\n        {{ page }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\nimport CalendarList from \"./CalendarList.vue\";\n\nexport default {\n  name: \"DiaryList\",\n  components: {\n    CalendarList,\n  },\n  data() {\n    return {\n      diaries: [], // 다이어리 데이터\n      searchQuery: \"\", // 검색어\n      searchFilter: \"title\", // 기본 검색 필터\n      currentPage: 1, // 현재 페이지\n      totalPages: 1, // 총 페이지 수\n      limit: 15, // 페이지당 항목 수\n      searchClicked: false, // 검색 버튼을 눌렀는지 여부 체크\n      chkFiltter: false, // 검색 버튼을 눌렀는지 여부 체크\n    };\n  },\n  methods: {\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      const params = {\n        search: this.searchQuery,\n        filter: this.searchFilter, // 검색 필터 추가\n        page: this.currentPage,\n        limit: this.limit,\n      };\n\n      apiClient\n        .get(\"/diary\", { params })\n        .then((response) => {\n          console.log(\"Fetched diaries:\", response.data);\n          this.diaries = response.data.data; // 현재 페이지 데이터\n          this.totalPages = Math.ceil(response.data.total / this.limit); // 총 페이지 계산\n        })\n        .catch((error) => {\n          console.error(\"Error fetching diaries:\", error.message);\n        });\n    },\n    // 검색 실행\n    searchDiaries() {\n      this.searchClicked = true; // 검색 버튼을 눌렀음을 표시\n      this.currentPage = 1; // 검색 시 첫 페이지로 이동\n      this.fetchDiaries();\n    },\n    checkFiltter() {\n      this.chkFiltter = true; // 검색 버튼을 눌렀음을 표시\n    },\n    // 페이지 변경\n    changePage(page) {\n      if (page >= 1 && page <= this.totalPages) {\n        this.currentPage = page;\n        this.fetchDiaries();\n      }\n    },\n  },\n};\n</script>"],"mappings":"AAsDA,OAAOA,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,YAAW,MAAO,oBAAoB;AAE7C,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAE;MACbC,WAAW,EAAE,EAAE;MAAE;MACjBC,YAAY,EAAE,OAAO;MAAE;MACvBC,WAAW,EAAE,CAAC;MAAE;MAChBC,UAAU,EAAE,CAAC;MAAE;MACfC,KAAK,EAAE,EAAE;MAAE;MACXC,aAAa,EAAE,KAAK;MAAE;MACtBC,UAAU,EAAE,KAAK,CAAE;IACrB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,YAAYA,CAAA,EAAG;MACb,MAAMC,MAAK,GAAI;QACbC,MAAM,EAAE,IAAI,CAACV,WAAW;QACxBW,MAAM,EAAE,IAAI,CAACV,YAAY;QAAE;QAC3BW,IAAI,EAAE,IAAI,CAACV,WAAW;QACtBE,KAAK,EAAE,IAAI,CAACA;MACd,CAAC;MAEDV,SAAQ,CACLmB,GAAG,CAAC,QAAQ,EAAE;QAAEJ;MAAO,CAAC,EACxBK,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACjB,IAAI,CAAC;QAC9C,IAAI,CAACC,OAAM,GAAIgB,QAAQ,CAACjB,IAAI,CAACA,IAAI,EAAE;QACnC,IAAI,CAACK,UAAS,GAAIe,IAAI,CAACC,IAAI,CAACJ,QAAQ,CAACjB,IAAI,CAACsB,KAAI,GAAI,IAAI,CAAChB,KAAK,CAAC,EAAE;MACjE,CAAC,EACAiB,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACzD,CAAC,CAAC;IACN,CAAC;IACD;IACAC,aAAaA,CAAA,EAAG;MACd,IAAI,CAACnB,aAAY,GAAI,IAAI,EAAE;MAC3B,IAAI,CAACH,WAAU,GAAI,CAAC,EAAE;MACtB,IAAI,CAACM,YAAY,CAAC,CAAC;IACrB,CAAC;IACDiB,YAAYA,CAAA,EAAG;MACb,IAAI,CAACnB,UAAS,GAAI,IAAI,EAAE;IAC1B,CAAC;IACD;IACAoB,UAAUA,CAACd,IAAI,EAAE;MACf,IAAIA,IAAG,IAAK,KAAKA,IAAG,IAAK,IAAI,CAACT,UAAU,EAAE;QACxC,IAAI,CAACD,WAAU,GAAIU,IAAI;QACvB,IAAI,CAACJ,YAAY,CAAC,CAAC;MACrB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}