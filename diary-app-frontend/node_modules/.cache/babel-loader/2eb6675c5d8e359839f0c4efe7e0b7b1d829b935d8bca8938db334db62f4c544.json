{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", null, \"다이어리 작성\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.submitDiary && $options.submitDiary(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"title\"\n  }, \"제목\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    type: \"text\",\n    id: \"title\",\n    required: \"\",\n    placeholder: \"제목을 입력하세요\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"content\"\n  }, \"내용\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.content = $event),\n    id: \"content\",\n    required: \"\",\n    placeholder: \"내용을 입력하세요\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"photo\"\n  }, \"사진 업로드\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"작성\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitDiary","for","$event","$data","title","type","id","required","placeholder","content","onChange","handleFileUpload","accept"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/DiaryForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>다이어리 작성</h1>\n    <form @submit.prevent=\"submitDiary\">\n      <div>\n        <label for=\"title\">제목</label>\n        <input v-model=\"title\" type=\"text\" id=\"title\" required placeholder=\"제목을 입력하세요\" />\n      </div>\n      <div>\n        <label for=\"content\">내용</label>\n        <textarea v-model=\"content\" id=\"content\" required placeholder=\"내용을 입력하세요\"></textarea>\n      </div>\n      <div>\n        <label for=\"photo\">사진 업로드</label>\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" />\n      </div>\n      <button type=\"submit\">작성</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      photo: null, // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    async submitDiary() {\n      try {\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        if (this.photo) {\n          formData.append('photo', this.photo);\n        }\n\n        await axios.post('http://localhost:3000/diary', formData, {\n          headers: { 'Content-Type': 'multipart/form-data' },\n        });\n\n        alert('다이어리가 성공적으로 작성되었습니다!');\n        this.$router.push('/'); // 목록 페이지로 이동\n      } catch (error) {\n        console.error('다이어리 작성 중 오류:', error.message);\n        alert('다이어리를 작성하는 데 문제가 발생했습니다.');\n      }\n    }\n  },\n};\n</script>\n\n<style>\n/* 간단한 스타일 추가 */\nform div {\n  margin-bottom: 1rem;\n}\n</style>"],"mappings":";;uBACEA,mBAAA,CAiBM,c,0BAhBJC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAcO;IAdAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA6B;IAAtBO,GAAG,EAAC;EAAO,GAAC,IAAE,sB,gBACrBP,mBAAA,CAAiF;IANzF,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMwBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC;iDAAnDL,KAAA,CAAAC,KAAK,E,KAEvBV,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA+B;IAAxBO,GAAG,EAAC;EAAS,GAAC,IAAE,sB,gBACvBP,mBAAA,CAAqF;IAV7F,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAU2BC,KAAA,CAAAM,OAAO,GAAAP,MAAA;IAAEI,EAAE,EAAC,SAAS;IAACC,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC;iDAA3CL,KAAA,CAAAM,OAAO,E,KAE5Bf,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1BO,GAAG,EAAC;EAAO,GAAC,QAAM,sBACzBP,mBAAA,CAAiE;IAA1DW,IAAI,EAAC,MAAM;IAAEK,QAAM,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAY,gBAAA,IAAAZ,QAAA,CAAAY,gBAAA,IAAAb,IAAA,CAAgB;IAAEc,MAAM,EAAC;iEAEvDlB,mBAAA,CAAiC;IAAzBW,IAAI,EAAC;EAAQ,GAAC,IAAE,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}