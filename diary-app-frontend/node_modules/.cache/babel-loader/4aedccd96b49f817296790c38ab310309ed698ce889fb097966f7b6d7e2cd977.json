{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_FullCalendar, {\n    options: $data.calendarOptions\n  }, null, 8 /* PROPS */, [\"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_FullCalendar","options","$data","calendarOptions"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/CalendarList.vue"],"sourcesContent":["<template>\n  <div>\n    <FullCalendar :options=\"calendarOptions\" />\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nexport default {\n  components: {\n    FullCalendar,\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [], // 여기 events를 API에서 받은 데이터로 업데이트해야 함!\n      },\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    formatDate(timestamp) {\n      if (!timestamp) {\n        console.error(\"Invalid timestamp:\", timestamp);\n        return null;\n      }\n\n      const date = new Date(Number(timestamp) * 1000); // 숫자로 변환 후 밀리초로 변환\n      return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD 형식 반환\n    },\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      apiClient\n        .get(\"/diary\")\n        .then((response) => {\n          console.log(\"Fetched diaries:\", response.data); // 원본 데이터 확인\n\n            his.calendarOptions.events = response.data.data.map(entry => {\n            console.log(\"Original timestamp:\", entry.timestamp); // timestamp 확인\n            const formattedDate = this.formatDate(entry.timestamp);\n            console.log(\"Formatted start date:\", formattedDate); // 변환된 날짜 확인\n            \n            return {\n              title: entry.title,\n              start: formattedDate, // 변환된 날짜 적용\n            };\n          });\n\n          console.log(\"Updated events:\", this.calendarOptions.events); // 최종 확인\n        })\n        .catch((error) => {\n          console.error(\"Error fetching diaries:\", error.message);\n        });\n    }\n  }\n};\n</script>"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAA2CC,uBAAA;IAA5BC,OAAO,EAAEC,KAAA,CAAAC;EAAe,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}