{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nexport default {\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [] // 여기 events를 API에서 받은 데이터로 업데이트해야 함!\n      }\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      apiClient.get(\"/diary\").then(response => {\n        console.log(\"Fetched diaries:\", response.data);\n\n        // events 배열을 API에서 받은 데이터로 변환하여 저장\n        this.calendarOptions.events = response.data.data.map(entry => ({\n          title: entry.title,\n          // 제목\n          start: entry.date // 시작 날짜 (YYYY-MM-DD 형식)\n        }));\n      }).catch(error => {\n        console.error(\"Error fetching diaries:\", error.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiClient","FullCalendar","dayGridPlugin","components","data","calendarOptions","plugins","initialView","events","created","fetchDiaries","methods","get","then","response","console","log","map","entry","title","start","date","catch","error","message"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/CalendarList.vue"],"sourcesContent":["<template>\n  <div>\n    <FullCalendar :options=\"calendarOptions\" />\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nexport default {\n  components: {\n    FullCalendar,\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [], // 여기 events를 API에서 받은 데이터로 업데이트해야 함!\n      },\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      apiClient\n        .get(\"/diary\")\n        .then((response) => {\n          console.log(\"Fetched diaries:\", response.data);\n\n          // events 배열을 API에서 받은 데이터로 변환하여 저장\n          this.calendarOptions.events = response.data.data.map(entry => ({\n            title: entry.title, // 제목\n            start: entry.date, // 시작 날짜 (YYYY-MM-DD 형식)\n          }));\n        })\n        .catch((error) => {\n          console.error(\"Error fetching diaries:\", error.message);\n        });\n    },\n  }\n};\n</script>"],"mappings":";AAOA,OAAOA,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,uBAAuB;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QACfC,OAAO,EAAE,CAACJ,aAAa,CAAC;QACxBK,WAAW,EAAE,cAAc;QAC3BC,MAAM,EAAE,EAAE,CAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACP;IACAD,YAAYA,CAAA,EAAG;MACbV,SAAQ,CACLY,GAAG,CAAC,QAAQ,EACZC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAACV,IAAI,CAAC;;QAE9C;QACA,IAAI,CAACC,eAAe,CAACG,MAAK,GAAIM,QAAQ,CAACV,IAAI,CAACA,IAAI,CAACa,GAAG,CAACC,KAAI,KAAM;UAC7DC,KAAK,EAAED,KAAK,CAACC,KAAK;UAAE;UACpBC,KAAK,EAAEF,KAAK,CAACG,IAAI,CAAE;QACrB,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACzD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}