{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-bar\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"Diary List\", -1 /* HOISTED */)), _createCommentVNode(\" 검색 UI \"), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 검색 필터 (select box) \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchFilter = $event)\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"option\", {\n    value: \"title\"\n  }, \"Title\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"content\"\n  }, \"Content\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.searchFilter]]), _createCommentVNode(\" 검색어 입력 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchQuery = $event),\n    placeholder: \"Search diaries\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.searchDiaries && $options.searchDiaries(...args))\n  }, \"Search\")]), _createCommentVNode(\" 다이어리 목록 \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.diaries, entry => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: entry.id\n    }, [_createElementVNode(\"strong\", null, [_createVNode(_component_router_link, {\n      to: `/edit/${entry.id}`\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(entry.title), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(entry.content), 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"em\", null, _toDisplayString(new Date(entry.created_at).toLocaleString()), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_createCommentVNode","_hoisted_1","_cache","$event","$data","searchFilter","value","type","searchQuery","placeholder","onClick","args","$options","searchDiaries","_Fragment","_renderList","diaries","entry","key","id","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_toDisplayString","title","_","content","Date","created_at","toLocaleString"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/DiaryList.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Diary List</h2>\n\n    <!-- 검색 UI -->\n    <div class=\"search-bar\">\n      <!-- 검색 필터 (select box) -->\n      <select v-model=\"searchFilter\">\n        <option value=\"title\">Title</option>\n        <option value=\"content\">Content</option>\n      </select>\n\n      <!-- 검색어 입력 -->\n      <input\n        type=\"text\"\n        v-model=\"searchQuery\"\n        placeholder=\"Search diaries\"\n      />\n      <button @click=\"searchDiaries\">Search</button>\n    </div>\n\n    <!-- 다이어리 목록 -->\n    <ul>\n      <li v-for=\"entry in diaries\" :key=\"entry.id\">\n        <strong>\n          <router-link :to=\"`/edit/${entry.id}`\">{{ entry.title }}</router-link>\n        </strong>\n        <br />\n        {{ entry.content }}<br />\n        <em>{{ new Date(entry.created_at).toLocaleString() }}</em>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\n\nexport default {\n  name: \"DiaryList\",\n  data() {\n    return {\n      diaries: [], // 다이어리 데이터\n      searchQuery: \"\", // 검색어\n      searchFilter: \"title\", // 검색 필터 (기본값: title)\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    // 다이어리 데이터 가져오기\n    fetchDiaries(search = \"\", filter = \"title\") {\n      console.log(\"Search Query Sent:\", search, \"Filter:\", filter); // 검색어 및 필터 확인\n\n      apiClient\n        .get(\"/diary\", { params: { search, filter } }) // 검색어와 필터 전달\n        .then((response) => {\n          console.log(\"Fetched diaries:\", response.data); // 응답 확인\n          this.diaries = response.data;\n        })\n        .catch((error) => {\n          console.error(\"Error fetching diaries:\", error.message);\n        });\n    },\n    // 검색 실행\n    searchDiaries() {\n      this.fetchDiaries(this.searchQuery, this.searchFilter); // 검색어와 필터 전달\n    },\n  },\n};\n</script>\n\n<style scoped>\n.search-bar {\n  margin-bottom: 20px;\n}\n.search-bar input {\n  padding: 8px;\n  width: 300px;\n  margin-right: 10px;\n}\n.search-bar select {\n  padding: 8px;\n  margin-right: 10px;\n}\n.search-bar button {\n  padding: 8px 16px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.search-bar button:hover {\n  background-color: #0056b3;\n}\n</style>"],"mappings":";;EAKSA,KAAK,EAAC;AAAY;;;uBAJzBC,mBAAA,CA+BM,c,0BA9BJC,mBAAA,CAAmB,YAAf,YAAU,sBAEdC,mBAAA,WAAc,EACdD,mBAAA,CAcM,OAdNE,UAcM,GAbJD,mBAAA,wBAA2B,E,gBAC3BD,mBAAA,CAGS;IAVf,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOuBC,KAAA,CAAAC,YAAY,GAAAF,MAAA;gCAC3BJ,mBAAA,CAAoC;IAA5BO,KAAK,EAAC;EAAO,GAAC,OAAK,qBAC3BP,mBAAA,CAAwC;IAAhCO,KAAK,EAAC;EAAS,GAAC,SAAO,oB,2CAFhBF,KAAA,CAAAC,YAAY,E,GAK7BL,mBAAA,YAAe,E,gBACfD,mBAAA,CAIE;IAHAQ,IAAI,EAAC,MAAM;IAdnB,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeiBC,KAAA,CAAAI,WAAW,GAAAL,MAAA;IACpBM,WAAW,EAAC;iDADHL,KAAA,CAAAI,WAAW,E,GAGtBT,mBAAA,CAA8C;IAArCW,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,QAAM,E,GAGvCX,mBAAA,aAAgB,EAChBD,mBAAA,CASK,c,kBARHD,mBAAA,CAOKgB,SAAA,QA9BXC,WAAA,CAuB0BX,KAAA,CAAAY,OAAO,EAAhBC,KAAK;yBAAhBnB,mBAAA,CAOK;MAPyBoB,GAAG,EAAED,KAAK,CAACE;QACvCpB,mBAAA,CAES,iBADPqB,YAAA,CAAsEC,sBAAA;MAAxDC,EAAE,WAAWL,KAAK,CAACE,EAAE;;MAzB7CI,OAAA,EAAAC,QAAA,CAyBiD,MAAiB,CAzBlEC,gBAAA,CAAAC,gBAAA,CAyBoDT,KAAK,CAACU,KAAK,iB;MAzB/DC,CAAA;6EA2BQ7B,mBAAA,CAAM,sCA3Bd0B,gBAAA,CA2Bc,GACN,GAAAC,gBAAA,CAAGT,KAAK,CAACY,OAAO,kB,0BAAG9B,mBAAA,CAAM,sCACzBA,mBAAA,CAA0D,YAAA2B,gBAAA,KAA/CI,IAAI,CAACb,KAAK,CAACc,UAAU,EAAEC,cAAc,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}