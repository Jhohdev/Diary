{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nexport default {\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [] // 여기 events를 API에서 받은 데이터로 업데이트해야 함!\n      }\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    formatDate(timestamp) {\n      if (!timestamp) {\n        console.error(\"Invalid timestamp:\", timestamp);\n        return null;\n      }\n      const date = new Date(Number(timestamp) * 1000); // 숫자로 변환 후 밀리초로 변환\n      return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD 형식 반환\n    },\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      apiClient.get(\"/diary\").then(response => {\n        console.log(\"Fetched diaries:\", response.data);\n        const events = response.data.data.map(entry => ({\n          title: entry.title,\n          start: this.formatDate(entry.timestamp)\n        }));\n        console.log(\"Events before update:\", events);\n        this.calendarOptions = Object.assign({}, this.calendarOptions, {\n          events: events\n        });\n        console.log(\"Updated calendarOptions:\", this.calendarOptions);\n      }).catch(error => {\n        console.error(\"Error fetching diaries:\", error.message);\n      });\n    }\n  }\n};","map":{"version":3,"names":["apiClient","FullCalendar","dayGridPlugin","components","data","calendarOptions","plugins","initialView","events","created","fetchDiaries","methods","formatDate","timestamp","console","error","date","Date","Number","toISOString","split","get","then","response","log","map","entry","title","start","Object","assign","catch","message"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/CalendarList.vue"],"sourcesContent":["<template>\n  <div>\n    <FullCalendar :options=\"calendarOptions\" />\n  </div>\n</template>\n\n<script>\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nexport default {\n  components: {\n    FullCalendar,\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [], // 여기 events를 API에서 받은 데이터로 업데이트해야 함!\n      },\n    };\n  },\n  created() {\n    this.fetchDiaries(); // 초기 데이터 로드\n  },\n  methods: {\n    formatDate(timestamp) {\n      if (!timestamp) {\n        console.error(\"Invalid timestamp:\", timestamp);\n        return null;\n      }\n\n      const date = new Date(Number(timestamp) * 1000); // 숫자로 변환 후 밀리초로 변환\n      return date.toISOString().split(\"T\")[0]; // YYYY-MM-DD 형식 반환\n    },\n    // 다이어리 데이터 가져오기\n    fetchDiaries() {\n      apiClient\n        .get(\"/diary\")\n        .then((response) => {\n          console.log(\"Fetched diaries:\", response.data);\n\n          const events = response.data.data.map(entry => ({\n            title: entry.title,\n            start: this.formatDate(entry.timestamp),\n          }));\n\n          console.log(\"Events before update:\", events);\n\n          this.calendarOptions = Object.assign({}, this.calendarOptions, {\n            events: events,\n          });\n\n          console.log(\"Updated calendarOptions:\", this.calendarOptions);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching diaries:\", error.message);\n        });\n    }\n  }\n};\n</script>"],"mappings":";AAOA,OAAOA,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,uBAAuB;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QACfC,OAAO,EAAE,CAACJ,aAAa,CAAC;QACxBK,WAAW,EAAE,cAAc;QAC3BC,MAAM,EAAE,EAAE,CAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,SAAS,EAAE;MACpB,IAAI,CAACA,SAAS,EAAE;QACdC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,SAAS,CAAC;QAC9C,OAAO,IAAI;MACb;MAEA,MAAMG,IAAG,GAAI,IAAIC,IAAI,CAACC,MAAM,CAACL,SAAS,IAAI,IAAI,CAAC,EAAE;MACjD,OAAOG,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC3C,CAAC;IACD;IACAV,YAAYA,CAAA,EAAG;MACbV,SAAQ,CACLqB,GAAG,CAAC,QAAQ,EACZC,IAAI,CAAEC,QAAQ,IAAK;QAClBT,OAAO,CAACU,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAACnB,IAAI,CAAC;QAE9C,MAAMI,MAAK,GAAIe,QAAQ,CAACnB,IAAI,CAACA,IAAI,CAACqB,GAAG,CAACC,KAAI,KAAM;UAC9CC,KAAK,EAAED,KAAK,CAACC,KAAK;UAClBC,KAAK,EAAE,IAAI,CAAChB,UAAU,CAACc,KAAK,CAACb,SAAS;QACxC,CAAC,CAAC,CAAC;QAEHC,OAAO,CAACU,GAAG,CAAC,uBAAuB,EAAEhB,MAAM,CAAC;QAE5C,IAAI,CAACH,eAAc,GAAIwB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACzB,eAAe,EAAE;UAC7DG,MAAM,EAAEA;QACV,CAAC,CAAC;QAEFM,OAAO,CAACU,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACnB,eAAe,CAAC;MAC/D,CAAC,EACA0B,KAAK,CAAEhB,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACiB,OAAO,CAAC;MACzD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}