{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      created_at: this.$route.query.date,\n      photo: null // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    // getLocalDateTime() {\n    //   const now = new Date();\n    //   now.setMinutes(now.getMinutes() - now.getTimezoneOffset()); // ✅ UTC 보정\n    //   return now.toISOString().slice(0, 10); // \"YYYY-MM-DD\" 형식\n    // },\n    async submitDiary() {\n      try {\n        const formData = new FormData();\n        formData.append(\"title\", this.title);\n        formData.append(\"content\", this.content);\n        if (this.photo) {\n          formData.append(\"photo\", this.photo);\n        }\n\n        // ✅ 현재 시간을 `YYYY-MM-DD HH:MM:SS` 형식으로 변환\n        const selectedDate = this.$route.query.date || this.getLocalDate();\n        formData.append(\"created_at\", selectedDate);\n        console.log(\"📌 [FRONTEND] 보낼 데이터:\", {\n          title: this.title,\n          content: this.content,\n          created_at: selectedDate,\n          photo: this.photo\n        });\n        await axios.post(\"http://localhost:3000/api/diary\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"✅ [FRONTEND] 응답 수신\");\n        alert(\"다이어리가 성공적으로 작성되었습니다!\");\n        this.$router.push(\"/\");\n      } catch (error) {\n        console.error(\"❌ [FRONTEND] 다이어리 작성 중 오류:\", error);\n        alert(\"다이어리를 작성하는 데 문제가 발생했습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","title","content","created_at","$route","query","date","photo","methods","handleFileUpload","event","target","files","submitDiary","formData","FormData","append","selectedDate","getLocalDate","console","log","post","headers","alert","$router","push","error"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/DiaryForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>다이어리 작성</h1>\n    <form @submit.prevent=\"submitDiary\">\n      <div>\n        <label for=\"title\">제목</label>\n        <input v-model=\"title\" type=\"text\" id=\"title\" required placeholder=\"제목을 입력하세요\" />\n      </div>\n      <div>\n        <label for=\"content\">내용</label>\n        <textarea v-model=\"content\" id=\"content\" required placeholder=\"내용을 입력하세요\"></textarea>\n      </div>\n      <div>\n        <label for=\"photo\">사진 업로드</label>\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" />\n      </div>\n      <button type=\"submit\">작성</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      created_at: this.$route.query.date,\n      photo: null, // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    // getLocalDateTime() {\n    //   const now = new Date();\n    //   now.setMinutes(now.getMinutes() - now.getTimezoneOffset()); // ✅ UTC 보정\n    //   return now.toISOString().slice(0, 10); // \"YYYY-MM-DD\" 형식\n    // },\n    async submitDiary() {\n      try {\n        const formData = new FormData();\n        formData.append(\"title\", this.title);\n        formData.append(\"content\", this.content);\n\n        if (this.photo) {\n          formData.append(\"photo\", this.photo);\n        }\n\n        // ✅ 현재 시간을 `YYYY-MM-DD HH:MM:SS` 형식으로 변환\n        const selectedDate = this.$route.query.date || this.getLocalDate();\n        formData.append(\"created_at\", selectedDate);\n        \n        console.log(\"📌 [FRONTEND] 보낼 데이터:\", {\n          title: this.title,\n          content: this.content,\n          created_at: selectedDate,\n          photo: this.photo,\n        });\n\n        await axios.post(\"http://localhost:3000/api/diary\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        console.log(\"✅ [FRONTEND] 응답 수신\");\n        alert(\"다이어리가 성공적으로 작성되었습니다!\");\n        this.$router.push(\"/\");\n      } catch (error) {\n        console.error(\"❌ [FRONTEND] 다이어리 작성 중 오류:\", error);\n        alert(\"다이어리를 작성하는 데 문제가 발생했습니다.\");\n      }\n    }\n  },\n};\n</script>\n\n<style>\n/* 간단한 스타일 추가 */\nform div {\n  margin-bottom: 1rem;\n}\n</style>"],"mappings":";AAsBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI;MAClCC,KAAK,EAAE,IAAI,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACH,KAAI,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;IACtC,CAAC;IACD;IACA;IACA;IACA;IACA;IACA,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACf,KAAK,CAAC;QACpCa,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACd,OAAO,CAAC;QAExC,IAAI,IAAI,CAACK,KAAK,EAAE;UACdO,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACT,KAAK,CAAC;QACtC;;QAEA;QACA,MAAMU,YAAW,GAAI,IAAI,CAACb,MAAM,CAACC,KAAK,CAACC,IAAG,IAAK,IAAI,CAACY,YAAY,CAAC,CAAC;QAClEJ,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEC,YAAY,CAAC;QAE3CE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;UACnCnB,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,OAAO,EAAE,IAAI,CAACA,OAAO;UACrBC,UAAU,EAAEc,YAAY;UACxBV,KAAK,EAAE,IAAI,CAACA;QACd,CAAC,CAAC;QAEF,MAAMT,KAAK,CAACuB,IAAI,CAAC,iCAAiC,EAAEP,QAAQ,EAAE;UAC5DQ,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QAEFH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCG,KAAK,CAAC,sBAAsB,CAAC;QAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDH,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}