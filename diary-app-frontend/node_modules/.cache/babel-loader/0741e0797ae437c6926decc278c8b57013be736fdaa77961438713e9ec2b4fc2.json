{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { useRouter } from \"vue-router\";\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nexport default {\n  components: {\n    FullCalendar\n  },\n  setup() {\n    const router = useRouter(); // Vue Router 사용\n\n    return {\n      router\n    };\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [],\n        eventClick: this.handleEventClick // 일정 클릭 이벤트 추가\n      }\n    };\n  },\n  created() {\n    this.fetchDiaries();\n  },\n  methods: {\n    formatDate(created_at) {\n      if (!created_at) return null;\n      if (!isNaN(created_at)) {\n        const date = new Date(Number(created_at) * 1000);\n        return date.toISOString().split(\"T\")[0];\n      }\n      return created_at.split(\"T\")[0];\n    },\n    fetchDiaries() {\n      apiClient.get(\"/diary\").then(response => {\n        if (!response.data || !Array.isArray(response.data.data)) return;\n        const events = response.data.data.map(entry => ({\n          id: entry.id,\n          // 상세페이지 이동을 위해 ID 포함\n          title: entry.title,\n          start: this.formatDate(entry.created_at),\n          Prototype: entry.Prototype\n        }));\n        this.calendarOptions = {\n          ...this.calendarOptions,\n          events\n        };\n        this.$nextTick(() => {\n          if (this.$refs.calendar) {\n            this.$refs.calendar.getApi().refetchEvents();\n          }\n        });\n      }).catch(error => console.error(\"Error fetching diaries:\", error.message));\n    },\n    handleEventClick(info) {\n      console.log(\"Clicked event:\", info.event);\n      const eventId = info.event.id;\n      if (eventId) {\n        this.$router.push(`/edit/${eventId}`);\n      }\n    }\n  }\n};","map":{"version":3,"names":["useRouter","apiClient","FullCalendar","dayGridPlugin","components","setup","router","data","calendarOptions","plugins","initialView","events","eventClick","handleEventClick","created","fetchDiaries","methods","formatDate","created_at","isNaN","date","Date","Number","toISOString","split","get","then","response","Array","isArray","map","entry","id","title","start","Prototype","$nextTick","$refs","calendar","getApi","refetchEvents","catch","error","console","message","info","log","event","eventId","$router","push"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/CalendarList.vue"],"sourcesContent":["<template>\n  <div>\n    <FullCalendar ref=\"calendar\" :options=\"calendarOptions\" />\n  </div>\n</template>\n\n<script>\nimport { useRouter } from \"vue-router\";\nimport apiClient from \"../services/api.js\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\n\nexport default {\n  components: {\n    FullCalendar,\n  },\n  setup() {\n    const router = useRouter(); // Vue Router 사용\n\n    return { router };\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        initialView: \"dayGridMonth\",\n        events: [],\n        eventClick: this.handleEventClick, // 일정 클릭 이벤트 추가\n      },\n    };\n  },\n  created() {\n    this.fetchDiaries();\n  },\n  methods: {\n    formatDate(created_at) {\n      if (!created_at) return null;\n      if (!isNaN(created_at)) {\n        const date = new Date(Number(created_at) * 1000);\n        return date.toISOString().split(\"T\")[0];\n      }\n      return created_at.split(\"T\")[0];\n    },\n    fetchDiaries() {\n      apiClient\n        .get(\"/diary\")\n        .then((response) => {\n          if (!response.data || !Array.isArray(response.data.data)) return;\n\n          const events = response.data.data.map(entry => ({\n            id: entry.id, // 상세페이지 이동을 위해 ID 포함\n            title: entry.title,\n            start: this.formatDate(entry.created_at),\n            Prototype: entry.Prototype,\n          }));\n\n          this.calendarOptions = { ...this.calendarOptions, events };\n\n          this.$nextTick(() => {\n            if (this.$refs.calendar) {\n              this.$refs.calendar.getApi().refetchEvents();\n            }\n          });\n        })\n        .catch(error => console.error(\"Error fetching diaries:\", error.message));\n    },\n    handleEventClick(info) {\n      console.log(\"Clicked event:\", info.event);\n      const eventId = info.event.id;\n      if (eventId) {\n        this.$router.push(`/edit/${eventId}`);\n      }\n    }\n  }\n};\n</script>"],"mappings":";;AAOA,SAASA,SAAQ,QAAS,YAAY;AACtC,OAAOC,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,uBAAuB;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIN,SAAS,CAAC,CAAC,EAAE;;IAE5B,OAAO;MAAEM;IAAO,CAAC;EACnB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QACfC,OAAO,EAAE,CAACN,aAAa,CAAC;QACxBO,WAAW,EAAE,cAAc;QAC3BC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,IAAI,CAACC,gBAAgB,CAAE;MACrC;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,IAAI;MAC5B,IAAI,CAACC,KAAK,CAACD,UAAU,CAAC,EAAE;QACtB,MAAME,IAAG,GAAI,IAAIC,IAAI,CAACC,MAAM,CAACJ,UAAU,IAAI,IAAI,CAAC;QAChD,OAAOE,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzC;MACA,OAAON,UAAU,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC;IACDT,YAAYA,CAAA,EAAG;MACbd,SAAQ,CACLwB,GAAG,CAAC,QAAQ,EACZC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACpB,IAAG,IAAK,CAACqB,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACpB,IAAI,CAACA,IAAI,CAAC,EAAE;QAE1D,MAAMI,MAAK,GAAIgB,QAAQ,CAACpB,IAAI,CAACA,IAAI,CAACuB,GAAG,CAACC,KAAI,KAAM;UAC9CC,EAAE,EAAED,KAAK,CAACC,EAAE;UAAE;UACdC,KAAK,EAAEF,KAAK,CAACE,KAAK;UAClBC,KAAK,EAAE,IAAI,CAACjB,UAAU,CAACc,KAAK,CAACb,UAAU,CAAC;UACxCiB,SAAS,EAAEJ,KAAK,CAACI;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC3B,eAAc,GAAI;UAAE,GAAG,IAAI,CAACA,eAAe;UAAEG;QAAO,CAAC;QAE1D,IAAI,CAACyB,SAAS,CAAC,MAAM;UACnB,IAAI,IAAI,CAACC,KAAK,CAACC,QAAQ,EAAE;YACvB,IAAI,CAACD,KAAK,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC;UAC9C;QACF,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACE,OAAO,CAAC,CAAC;IAC5E,CAAC;IACD/B,gBAAgBA,CAACgC,IAAI,EAAE;MACrBF,OAAO,CAACG,GAAG,CAAC,gBAAgB,EAAED,IAAI,CAACE,KAAK,CAAC;MACzC,MAAMC,OAAM,GAAIH,IAAI,CAACE,KAAK,CAACf,EAAE;MAC7B,IAAIgB,OAAO,EAAE;QACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,SAASF,OAAO,EAAE,CAAC;MACvC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}