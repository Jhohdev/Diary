{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Diary Entries\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.diaries, entry => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: entry.id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(entry.title), 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(entry.content), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"em\", null, _toDisplayString(new Date(entry.created_at).toLocaleString()), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","diaries","entry","key","_toDisplayString","title","_createTextVNode","content","Date","created_at","toLocaleString"],"sources":["/Users/ojaehyeon/Desktop/diary-app-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Diary Entries</h1>\n    <ul>\n      <li v-for=\"entry in diaries\" :key=\"entry.id\">\n        <strong>{{ entry.title }}</strong><br />\n        {{ entry.content }}<br />\n        <em>{{ new Date(entry.created_at).toLocaleString() }}</em>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport apiClient from './services/api';\n\nexport default {\n  data() {\n    return {\n      diaries: [],\n    };\n  },\n  async created() {\n    try {\n      const response = await apiClient.get('/diary');\n      console.log('API Response:', response.data); // 응답 데이터 로그\n      this.diaries = response.data;\n    } catch (error) {\n      console.error('Error fetching diary entries:', error);\n    }\n  }\n};\n</script>"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;uBAAbC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAMK,c,kBALHF,mBAAA,CAIKG,SAAA,QARXC,WAAA,CAI0BC,KAAA,CAAAC,OAAO,EAAhBC,KAAK;yBAAhBP,mBAAA,CAIK;MAJyBQ,GAAG,EAAED,KAAK,CAACR;QACvCG,mBAAA,CAAkC,gBAAAO,gBAAA,CAAvBF,KAAK,CAACG,KAAK,kB,0BAAYR,mBAAA,CAAM,sCALhDS,gBAAA,CAKgD,GACxC,GAAAF,gBAAA,CAAGF,KAAK,CAACK,OAAO,kB,0BAAGV,mBAAA,CAAM,sCACzBA,mBAAA,CAA0D,YAAAO,gBAAA,KAA/CI,IAAI,CAACN,KAAK,CAACO,UAAU,EAAEC,cAAc,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}