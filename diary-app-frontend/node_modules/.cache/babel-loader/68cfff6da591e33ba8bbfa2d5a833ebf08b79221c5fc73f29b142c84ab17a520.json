{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      created_at: '',\n      photo: null // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    async submitDiary() {\n      try {\n        console.log(\"📌 [FRONTEND] 다이어리 제출 요청 시작\");\n        const formData = new FormData();\n        formData.append(\"title\", this.title);\n        formData.append(\"content\", this.content);\n        formData.append(\"created_at\", this.$route.query.date);\n        if (this.photo) {\n          formData.append(\"photo\", this.photo);\n        }\n        console.log(\"📌 [FRONTEND] 보낼 데이터:\", {\n          title: this.title,\n          content: this.content,\n          created_at: this.$route.query.date,\n          photo: this.photo ? this.photo.name : \"첨부 없음\"\n        });\n        const response = await axios.post(\"http://localhost:3000/diary\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"✅ [FRONTEND] 응답 수신:\", response.data);\n        alert(\"다이어리가 성공적으로 작성되었습니다!\");\n        this.$router.push(\"/\"); // 목록 페이지로 이동\n      } catch (error) {\n        console.error(\"❌ [FRONTEND] 다이어리 작성 중 오류:\", error);\n        if (error.response) {\n          console.error(\"❌ [FRONTEND] 서버 응답 상태 코드:\", error.response.status);\n          console.error(\"❌ [FRONTEND] 서버 응답 데이터:\", error.response.data);\n        } else if (error.request) {\n          console.error(\"❌ [FRONTEND] 서버로 요청이 전송되지 않음:\", error.request);\n        } else {\n          console.error(\"❌ [FRONTEND] 요청 설정 중 오류 발생:\", error.message);\n        }\n        alert(\"다이어리를 작성하는 데 문제가 발생했습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","title","content","created_at","photo","methods","handleFileUpload","event","target","files","submitDiary","console","log","formData","FormData","append","$route","query","date","response","post","headers","alert","$router","push","error","status","request","message"],"sources":["/Users/ojaehyeon/Diary/diary-app-frontend/src/components/DiaryForm.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>다이어리 작성</h1>\n    <form @submit.prevent=\"submitDiary\">\n      <div>\n        <label for=\"title\">제목</label>\n        <input v-model=\"title\" type=\"text\" id=\"title\" required placeholder=\"제목을 입력하세요\" />\n      </div>\n      <div>\n        <label for=\"content\">내용</label>\n        <textarea v-model=\"content\" id=\"content\" required placeholder=\"내용을 입력하세요\"></textarea>\n      </div>\n      <div>\n        <label for=\"photo\">사진 업로드</label>\n        <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" />\n      </div>\n      <button type=\"submit\">작성</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'DiaryForm',\n  data() {\n    return {\n      title: '',\n      content: '',\n      created_at: '',\n      photo: null, // 업로드할 파일 데이터\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      this.photo = event.target.files[0]; // 파일 데이터를 상태에 저장\n    },\n    async submitDiary() {\n      try {\n        console.log(\"📌 [FRONTEND] 다이어리 제출 요청 시작\");\n\n        const formData = new FormData();\n        formData.append(\"title\", this.title);\n        formData.append(\"content\", this.content);\n        formData.append(\"created_at\", this.$route.query.date);\n\n        if (this.photo) {\n          formData.append(\"photo\", this.photo);\n        }\n\n        console.log(\"📌 [FRONTEND] 보낼 데이터:\", {\n          title: this.title,\n          content: this.content,\n          created_at: this.$route.query.date,\n          photo: this.photo ? this.photo.name : \"첨부 없음\",\n        });\n\n        const response = await axios.post(\"http://localhost:3000/diary\", formData, {\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n\n        console.log(\"✅ [FRONTEND] 응답 수신:\", response.data);\n        alert(\"다이어리가 성공적으로 작성되었습니다!\");\n        this.$router.push(\"/\"); // 목록 페이지로 이동\n\n      } catch (error) {\n        console.error(\"❌ [FRONTEND] 다이어리 작성 중 오류:\", error);\n        \n        if (error.response) {\n          console.error(\"❌ [FRONTEND] 서버 응답 상태 코드:\", error.response.status);\n          console.error(\"❌ [FRONTEND] 서버 응답 데이터:\", error.response.data);\n        } else if (error.request) {\n          console.error(\"❌ [FRONTEND] 서버로 요청이 전송되지 않음:\", error.request);\n        } else {\n          console.error(\"❌ [FRONTEND] 요청 설정 중 오류 발생:\", error.message);\n        }\n\n        alert(\"다이어리를 작성하는 데 문제가 발생했습니다.\");\n      }\n    }\n  },\n};\n</script>\n\n<style>\n/* 간단한 스타일 추가 */\nform div {\n  margin-bottom: 1rem;\n}\n</style>"],"mappings":";AAsBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,IAAI,CAAE;IACf,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAACH,KAAI,GAAIG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;IACtC,CAAC;IACD,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAE1C,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACd,KAAK,CAAC;QACpCY,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACb,OAAO,CAAC;QACxCW,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC;QAErD,IAAI,IAAI,CAACd,KAAK,EAAE;UACdS,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACX,KAAK,CAAC;QACtC;QAEAO,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE;UACnCX,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,OAAO,EAAE,IAAI,CAACA,OAAO;UACrBC,UAAU,EAAE,IAAI,CAACa,MAAM,CAACC,KAAK,CAACC,IAAI;UAClCd,KAAK,EAAE,IAAI,CAACA,KAAI,GAAI,IAAI,CAACA,KAAK,CAACL,IAAG,GAAI;QACxC,CAAC,CAAC;QAEF,MAAMoB,QAAO,GAAI,MAAMrB,KAAK,CAACsB,IAAI,CAAC,6BAA6B,EAAEP,QAAQ,EAAE;UACzEQ,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QAEFV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEO,QAAQ,CAACnB,IAAI,CAAC;QACjDsB,KAAK,CAAC,sBAAsB,CAAC;QAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;MAE1B,EAAE,OAAOC,KAAK,EAAE;QACdd,OAAO,CAACc,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAElD,IAAIA,KAAK,CAACN,QAAQ,EAAE;UAClBR,OAAO,CAACc,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACN,QAAQ,CAACO,MAAM,CAAC;UACjEf,OAAO,CAACc,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACN,QAAQ,CAACnB,IAAI,CAAC;QAC/D,OAAO,IAAIyB,KAAK,CAACE,OAAO,EAAE;UACxBhB,OAAO,CAACc,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;QAC/D,OAAO;UACLhB,OAAO,CAACc,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACG,OAAO,CAAC;QAC7D;QAEAN,KAAK,CAAC,0BAA0B,CAAC;MACnC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}